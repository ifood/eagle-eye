// Code generated by MockGen. DO NOT EDIT.
// Source: IndividualScanRepository.go

// Package mocks is a generated GoMock package.
package mocks

import (
	entities "eagle-eye/domain/entities"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockIndividualScanRepository is a mock of IndividualScanRepository interface.
type MockIndividualScanRepository struct {
	ctrl     *gomock.Controller
	recorder *MockIndividualScanRepositoryMockRecorder
}

// MockIndividualScanRepositoryMockRecorder is the mock recorder for MockIndividualScanRepository.
type MockIndividualScanRepositoryMockRecorder struct {
	mock *MockIndividualScanRepository
}

// NewMockIndividualScanRepository creates a new mock instance.
func NewMockIndividualScanRepository(ctrl *gomock.Controller) *MockIndividualScanRepository {
	mock := &MockIndividualScanRepository{ctrl: ctrl}
	mock.recorder = &MockIndividualScanRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIndividualScanRepository) EXPECT() *MockIndividualScanRepositoryMockRecorder {
	return m.recorder
}

// Get mocks base method.
func (m *MockIndividualScanRepository) Get(scanID string) (entities.ScanResult, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", scanID)
	ret0, _ := ret[0].(entities.ScanResult)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockIndividualScanRepositoryMockRecorder) Get(scanID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockIndividualScanRepository)(nil).Get), scanID)
}

// Save mocks base method.
func (m *MockIndividualScanRepository) Save(result entities.ScanResult) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Save", result)
	ret0, _ := ret[0].(error)
	return ret0
}

// Save indicates an expected call of Save.
func (mr *MockIndividualScanRepositoryMockRecorder) Save(result interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Save", reflect.TypeOf((*MockIndividualScanRepository)(nil).Save), result)
}
