// Code generated by MockGen. DO NOT EDIT.
// Source: ScanStatisticsService.go

// Package mocks is a generated GoMock package.
package mocks

import (
	entities "eagle-eye/domain/entities"
	reflect "reflect"
	time "time"

	gomock "github.com/golang/mock/gomock"
)

// MockStatisticsService is a mock of StatisticsService interface.
type MockStatisticsService struct {
	ctrl     *gomock.Controller
	recorder *MockStatisticsServiceMockRecorder
}

// MockStatisticsServiceMockRecorder is the mock recorder for MockStatisticsService.
type MockStatisticsServiceMockRecorder struct {
	mock *MockStatisticsService
}

// NewMockStatisticsService creates a new mock instance.
func NewMockStatisticsService(ctrl *gomock.Controller) *MockStatisticsService {
	mock := &MockStatisticsService{ctrl: ctrl}
	mock.recorder = &MockStatisticsServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockStatisticsService) EXPECT() *MockStatisticsServiceMockRecorder {
	return m.recorder
}

// GetBucketsStatistics mocks base method.
func (m *MockStatisticsService) GetBucketsStatistics(bucketName string, date time.Time, period entities.Period) (map[string]entities.ScanResult, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetBucketsStatistics", bucketName, date, period)
	ret0, _ := ret[0].(map[string]entities.ScanResult)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetBucketsStatistics indicates an expected call of GetBucketsStatistics.
func (mr *MockStatisticsServiceMockRecorder) GetBucketsStatistics(bucketName, date, period interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetBucketsStatistics", reflect.TypeOf((*MockStatisticsService)(nil).GetBucketsStatistics), bucketName, date, period)
}

// GetScanResult mocks base method.
func (m *MockStatisticsService) GetScanResult(scanID string) (entities.ScanResult, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetScanResult", scanID)
	ret0, _ := ret[0].(entities.ScanResult)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetScanResult indicates an expected call of GetScanResult.
func (mr *MockStatisticsServiceMockRecorder) GetScanResult(scanID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetScanResult", reflect.TypeOf((*MockStatisticsService)(nil).GetScanResult), scanID)
}

// Show mocks base method.
func (m *MockStatisticsService) Show(mimetype entities.ViewerMimetype, bucketName string, date time.Time, period entities.Period) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Show", mimetype, bucketName, date, period)
}

// Show indicates an expected call of Show.
func (mr *MockStatisticsServiceMockRecorder) Show(mimetype, bucketName, date, period interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Show", reflect.TypeOf((*MockStatisticsService)(nil).Show), mimetype, bucketName, date, period)
}
